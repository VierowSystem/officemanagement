# Generated by Django 4.2.2 on 2023-08-19 07:13

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dateof_purchase', models.DateField()),
                ('vendor', models.CharField(max_length=100)),
                ('particular', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
                ('gst_num', models.IntegerField()),
                ('sale_amt', models.IntegerField()),
                ('qty', models.IntegerField()),
                ('freight_charge', models.IntegerField()),
                ('taxable_value', models.IntegerField()),
                ('sgst', models.IntegerField()),
                ('cgst', models.IntegerField()),
                ('round_off', models.FloatField()),
                ('igst', models.IntegerField()),
                ('amount1', models.IntegerField()),
                ('site', models.CharField(max_length=100)),
                ('dateof_payment', models.DateField()),
                ('payment_mode', models.CharField(max_length=100)),
                ('amount2', models.IntegerField()),
                ('balance', models.IntegerField()),
                ('paid_by', models.CharField(max_length=100)),
                ('invoice_num', models.IntegerField(blank=True, null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Expense',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('site', models.CharField(max_length=200)),
                ('emp_name', models.CharField(max_length=200)),
                ('travel_exp', models.IntegerField()),
                ('food', models.IntegerField()),
                ('tea', models.IntegerField()),
                ('other', models.IntegerField()),
                ('total', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Sales',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('name', models.CharField(max_length=200)),
                ('particular', models.CharField(max_length=100)),
                ('quantity_sold', models.IntegerField()),
                ('gst_no', models.IntegerField()),
                ('total', models.IntegerField()),
                ('discount_allowed', models.IntegerField()),
                ('sub_total', models.IntegerField()),
                ('sgst', models.IntegerField()),
                ('cgst', models.IntegerField()),
                ('grand_total', models.IntegerField()),
                ('pay_date', models.DateField()),
                ('amt_recieved', models.IntegerField()),
                ('outstanding', models.IntegerField()),
                ('mode_of_payment', models.CharField(max_length=100)),
                ('payment_status', models.CharField(max_length=100)),
                ('invoice_no', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Login',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_user', models.BooleanField(default=False)),
                ('is_manager', models.BooleanField(default=False)),
                ('contact_no', models.CharField(max_length=200)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('contact_no', models.CharField(max_length=200)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('name', models.CharField(max_length=100)),
                ('invoice_no', models.IntegerField(blank=True, null=True, unique=True)),
                ('particular', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
                ('unit_price', models.IntegerField()),
                ('qty', models.IntegerField()),
                ('units', models.CharField(max_length=100)),
                ('site', models.CharField(max_length=100)),
                ('usage_qty', models.IntegerField()),
                ('balance', models.IntegerField()),
                ('invoice', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='stock_items', to='OfficeApp.account')),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('item_name', models.CharField(max_length=200)),
                ('number', models.IntegerField()),
                ('description', models.CharField(max_length=100)),
                ('brand', models.CharField(max_length=200)),
                ('is_approved', models.BooleanField(default=False)),
                ('is_rejected', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
